#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e
set -o pipefail

BUILD_DIR=$1
CACHE_DIR=$2

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

echo `dirname $0`

echo ""
echo "-----> looking for tools"

if [ -f bin/php ] || [ -f /usr/bin/php ] || [-f /bin/php ] || [ -f /usr/local/bin/php ]; then
  echo `php -v`
else
  echo "No php"
fi

if [ -f bin/ruby ] || [ -f /usr/bin/ruby ] || [-f /bin/ruby ] || [ -f /usr/local/bin/ruby ]; then
  echo `ruby -v`
else
  echo "No ruby"
fi

echo "Php  `php -v`"| indent
echo "Ruby `ruby -v`"| indent

cd $BUILD_DIR

if [ ! -d $CACHE_DIR ]; then
  echo "Create cache dir"
  #mkdir $CACHE_DIR
fi

echo "-----> Build dir: ${BUILD_DIR}"
ls $BUILD_DIR | indent

echo "-----> Cache dir ${CACHE_DIR}"
ls $CACHE_DIR | indent


# configure
if [ -f configure ]; then
  echo "-----> Configuring"
  ./configure 2>&1 | indent
fi

# make
echo "-----> Compiling with Make"
make 2>&1 | indent